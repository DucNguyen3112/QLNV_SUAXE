/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;
import Form.Xuli.KetNoiDB;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Random;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author StarScream
 */
public class PhanCongForm extends javax.swing.JDialog {
    private String bienSoXe, MaNV,MaDV = "",TenDV,maDVCombox;
    private String dataPhanCong="";
    /** Creates new form PhanCongForm */
    private HashMap bangDV;
    private HashMap dataNhanVien;
    public PhanCongForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        this.dataPhanCong = LeTanform.dataBangPhanCong;
        if (dataPhanCong.equals("")){
            this.MaNV = LeTanform.MaNVPhanCong;
            this.bienSoXe = LeTanform.phanCongBienSoXe;
            loadData();
        }
        else 
        {  
            loadDataEdit();
        }   
    }
    public void loadData(){
        
        jBienSoXE.setText(bienSoXe);
        String tenNV = getTenNhanVien(MaNV);
        jHovaTen.setText(tenNV);
        loadDataComboxDV();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
     public static String getTenNhanVien (String s) {
        String sql = "select HoTen from NHANVIEN where MaNV = '"+ s+"'";
        Connection ketNoi = KetNoiDB.getConnection();
        String tamp = null;
        try {
            Statement st = ketNoi.createStatement();
            ResultSet rs  =st.executeQuery(sql);
            while (rs.next()){
                tamp = rs.getString("HoTen"); 
            }  
            st.close();
            rs.close();
            ketNoi.close();
        } catch (SQLException e) {
        }
        return tamp;
    }
     public void loadDataComboxDV(){
         jCBoxDV.removeAllItems();
         bangDV = new HashMap();
         bangDV.clear();
         String sql = "select MaDV,TenDV from DICHVU";
         Connection ketNoi = KetNoiDB.getConnection();
         try {
             Statement st = ketNoi.createStatement();
             ResultSet rs = st.executeQuery(sql);
             while(rs.next()){
                 bangDV.put(rs.getString("TenDV"), rs.getString("MaDV"));
                 jCBoxDV.addItem(rs.getString("TenDV"));
             }
             jCBoxDV.addItem("Thêm dịch vụ");
             st.close();
             rs.close();
             ketNoi.close();
         } catch (Exception e) {
         }
            
    }
     
    public void themDichVu(String tenDV){
            String sql = "insert into DICHVU(MaDV,TenDV) values(?,?)";
            Connection ketNoi = KetNoiDB.getConnection();
            Random rd = new Random();
            maDVCombox = (String.valueOf(rd.nextInt(1000)));
            try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ps.setString(1, maDVCombox);
            ps.setString(2,tenDV);
            if (ps.executeUpdate()>0) {
                JOptionPane.showMessageDialog(this, "Thêm dịch vụ thành công!");
            }else{
                JOptionPane.showMessageDialog(this, "Lỗi!Không thành công");
            }
           ps.close();
           ketNoi.close();
        } catch (Exception e) {
        }
        
    }
    public String getMaDV(){
          for (Object i : bangDV.keySet()) {
                if(i.equals(TenDV))
                {
                    MaDV = (String) bangDV.get(i);
                }
        }
      return MaDV;     
    }
    public void  themCT_SDDV(){
        String sql ="INSERT INTO CT_SDDV(BienSoXe,MaNV,MaDV,NgayGiolamDV,NgayGioHT,MoTa)  VALUES(?,?,?,?,?,?)";
        Connection ketNoi =KetNoiDB.getConnection();
        java.util.Date date=new java.util.Date();
        SimpleDateFormat datefm=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        try {
             PreparedStatement ps = ketNoi.prepareStatement(sql);
             ps.setString(1, bienSoXe);
             ps.setString(2, MaNV);
             ps.setString(3, MaDV);
             ps.setString(4, datefm.format(date));
             ps.setString(5, datefm.format(date));
             ps.setString(6,jMota.getText());
             if (ps.executeUpdate()>0) {
                JOptionPane.showMessageDialog(this, "Đã phân công nhân viên thành công!");
            }else{
                JOptionPane.showMessageDialog(this, "Lỗi! Phân công thất bại");
            }
           ps.close();
           ketNoi.close();
             
        } catch (Exception e) {
        }
    
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jCBoxDV = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMota = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jBienSoXE = new javax.swing.JTextField();
        jHovaTen = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Dịch vụ:");

        jCBoxDV.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCBoxDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxDVActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("PHÂN CÔNG LÀM DỊCH VỤ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Mô tả:");

        jMota.setColumns(5);
        jMota.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jMota.setRows(5);
        jScrollPane1.setViewportView(jMota);

        jButton1.setText("PHÂN CÔNG");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("HUỶ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Biển số xe:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Họ tên NVBD:");

        jBienSoXE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jHovaTen.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jCBoxDV, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jBienSoXE)
                    .addComponent(jHovaTen))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBienSoXE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jHovaTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBoxDV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void editCT_SDDV(){
        String sql = "UPDATE CT_SDDV SET  MaNV = ?, " +"MaDV = ? ," +"MoTa = ? " + "where BienSoXe = ?";
        Connection ketNoi = KetNoiDB.getConnection();
        try {
            PreparedStatement pr = ketNoi.prepareStatement(sql);
            pr.setString(1, MaNV);
            pr.setString(2, MaDV);
            pr.setString(3, jMota.getText());
            pr.setString(4, dataPhanCong);
             if (pr.executeUpdate()>0) {
                JOptionPane.showMessageDialog(this, "Sửa thành công!");
            }else{
                JOptionPane.showMessageDialog(this, "Lỗi! Sửa không thành công");
            }
        } catch (Exception e) {
        }
    
    }
    public void loadDataEdit(){
        
        jBienSoXE.setText(dataPhanCong);
        loadDataComboxDV();
        
        String sql = "SELECT MaNV,MoTa from CT_SDDV WHERE BienSoXe = '" + dataPhanCong + "'";
        Connection ketNoi = KetNoiDB.getConnection();
        try {
               Statement st = ketNoi.createStatement();
               ResultSet rs = st.executeQuery(sql);
               while(rs.next()){
                   String tenNV = getTenNhanVien(rs.getString("MaNV"));
                   jHovaTen.setText(tenNV);
                   jMota.setText(rs.getString("MoTa"));
               }
            rs.close();
            st.close();
            ketNoi.close();
        } catch (SQLException e) {
        }
        
    }
    
    
    private void jCBoxDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxDVActionPerformed
        // TODO add your handling code here:
            if(jCBoxDV.getSelectedItem().equals("Thêm dịch vụ")){
                 String  inputDv = JOptionPane.showInputDialog("Thêm dịch vụ");
                 themDichVu(inputDv);
                 loadDataComboxDV();
            }  
            else{
                   TenDV = (String) jCBoxDV.getSelectedItem();
                   getMaDV();
            }
    }//GEN-LAST:event_jCBoxDVActionPerformed

    public void KtTenNhanVien(){
        Connection ketNoi = KetNoiDB.getConnection();
        String sql="select MaNV,HoTen from NHANVIEN";
         MaNV="";
         dataNhanVien = new HashMap();
         dataNhanVien.clear();
         try {
             Statement st = ketNoi.createStatement();
             ResultSet rs = st.executeQuery(sql);
             while(rs.next()){
                 dataNhanVien.put(rs.getString("HoTen"), rs.getString("MaNV"));
             }
             st.close();
             rs.close();
             ketNoi.close();
         } catch (Exception e) {
         }
        for (Object i : dataNhanVien.keySet()) {
                if(i.equals(jHovaTen.getText()))
                {   
                    MaNV= (String) dataNhanVien.get(i);
                }
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            
        if (dataPhanCong.equals("")){
               themCT_SDDV();
               setVisible(false);
        }
        else 
        {      KtTenNhanVien();
               if (!jBienSoXE.getText().equals(dataPhanCong)){
                    JOptionPane.showMessageDialog(rootPane, "Không được thay đổi biển số xe đã phân công !!!");
               }
               else if(MaNV.equals("")){
                   JOptionPane.showMessageDialog(rootPane, "Không có nhân viên !!!");
               }
               else{
                   editCT_SDDV();
                   setVisible(false);
               }
               
        }   
            
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhanCongForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhanCongForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhanCongForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhanCongForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PhanCongForm dialog = new PhanCongForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jBienSoXE;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jCBoxDV;
    private javax.swing.JTextField jHovaTen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextArea jMota;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

